import numpy as np

# Define the system of equations
A = np.array([[2, 3, 4], [3, 2, 4], [4, 3, 2]])

# Append the identity matrix to the right of A
n = A.shape[0]
B = np.hstack([A, np.eye(n)])

# Perform Gauss-Jordan elimination to get the reduced row echelon form
for i in range(n):
    # Swap the row with the largest absolute value in the current column to the top
    max_row = np.argmax(np.abs(B[i:, i]))
    B[[i, max_row + i]] = B[[max_row + i, i]]

    # Normalize the pivot row
    pivot = B[i, i]
    B[i, :] /= pivot

    # Eliminate the pivot column below and above the pivot row
    for j in range(n):
        if j != i:
            factor = B[j, i]
            B[j, :] -= factor * B[i, :]

# Extract the solution vectors from the reduced row echelon form
x = B[:, n:]

print("Solution:")
print(x)
